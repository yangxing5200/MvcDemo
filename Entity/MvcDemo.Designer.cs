//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("MvcDemoModel", "FK_Student_School", "School", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Entity.School), "STUDENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.STUDENT), true)]
[assembly: EdmRelationshipAttribute("MvcDemoModel", "FK_STUDENT_SUBJECT_Student", "STUDENT", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entity.STUDENT), "STUDENT_SUBJECT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.STUDENT_SUBJECT), true)]
[assembly: EdmRelationshipAttribute("MvcDemoModel", "FK_STUDENT_SUBJECT_SUBJECT", "SUBJECT", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entity.SUBJECT), "STUDENT_SUBJECT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.STUDENT_SUBJECT), true)]

#endregion

namespace Entity
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class MvcDemoEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“MvcDemoEntities”部分中的连接字符串初始化新 MvcDemoEntities 对象。
        /// </summary>
        public MvcDemoEntities() : base("name=MvcDemoEntities", "MvcDemoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 MvcDemoEntities 对象。
        /// </summary>
        public MvcDemoEntities(string connectionString) : base(connectionString, "MvcDemoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 MvcDemoEntities 对象。
        /// </summary>
        public MvcDemoEntities(EntityConnection connection) : base(connection, "MvcDemoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<t_Users> t_Users
        {
            get
            {
                if ((_t_Users == null))
                {
                    _t_Users = base.CreateObjectSet<t_Users>("t_Users");
                }
                return _t_Users;
            }
        }
        private ObjectSet<t_Users> _t_Users;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<School> School
        {
            get
            {
                if ((_School == null))
                {
                    _School = base.CreateObjectSet<School>("School");
                }
                return _School;
            }
        }
        private ObjectSet<School> _School;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<STUDENT> STUDENT
        {
            get
            {
                if ((_STUDENT == null))
                {
                    _STUDENT = base.CreateObjectSet<STUDENT>("STUDENT");
                }
                return _STUDENT;
            }
        }
        private ObjectSet<STUDENT> _STUDENT;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<STUDENT_SUBJECT> STUDENT_SUBJECT
        {
            get
            {
                if ((_STUDENT_SUBJECT == null))
                {
                    _STUDENT_SUBJECT = base.CreateObjectSet<STUDENT_SUBJECT>("STUDENT_SUBJECT");
                }
                return _STUDENT_SUBJECT;
            }
        }
        private ObjectSet<STUDENT_SUBJECT> _STUDENT_SUBJECT;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<SUBJECT> SUBJECT
        {
            get
            {
                if ((_SUBJECT == null))
                {
                    _SUBJECT = base.CreateObjectSet<SUBJECT>("SUBJECT");
                }
                return _SUBJECT;
            }
        }
        private ObjectSet<SUBJECT> _SUBJECT;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 t_Users EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTot_Users(t_Users t_Users)
        {
            base.AddObject("t_Users", t_Users);
        }
    
        /// <summary>
        /// 用于向 School EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSchool(School school)
        {
            base.AddObject("School", school);
        }
    
        /// <summary>
        /// 用于向 STUDENT EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSTUDENT(STUDENT sTUDENT)
        {
            base.AddObject("STUDENT", sTUDENT);
        }
    
        /// <summary>
        /// 用于向 STUDENT_SUBJECT EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSTUDENT_SUBJECT(STUDENT_SUBJECT sTUDENT_SUBJECT)
        {
            base.AddObject("STUDENT_SUBJECT", sTUDENT_SUBJECT);
        }
    
        /// <summary>
        /// 用于向 SUBJECT EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSUBJECT(SUBJECT sUBJECT)
        {
            base.AddObject("SUBJECT", sUBJECT);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MvcDemoModel", Name="School")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class School : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 School 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        public static School CreateSchool(global::System.String id)
        {
            School school = new School();
            school.Id = id;
            return school;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WebSite
        {
            get
            {
                return _WebSite;
            }
            set
            {
                OnWebSiteChanging(value);
                ReportPropertyChanging("WebSite");
                _WebSite = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WebSite");
                OnWebSiteChanged();
            }
        }
        private global::System.String _WebSite;
        partial void OnWebSiteChanging(global::System.String value);
        partial void OnWebSiteChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Manager
        {
            get
            {
                return _Manager;
            }
            set
            {
                OnManagerChanging(value);
                ReportPropertyChanging("Manager");
                _Manager = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Manager");
                OnManagerChanged();
            }
        }
        private global::System.String _Manager;
        partial void OnManagerChanging(global::System.String value);
        partial void OnManagerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                OnCreatorChanging(value);
                ReportPropertyChanging("Creator");
                _Creator = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Creator");
                OnCreatorChanged();
            }
        }
        private global::System.String _Creator;
        partial void OnCreatorChanging(global::System.String value);
        partial void OnCreatorChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Modify
        {
            get
            {
                return _Modify;
            }
            set
            {
                OnModifyChanging(value);
                ReportPropertyChanging("Modify");
                _Modify = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Modify");
                OnModifyChanged();
            }
        }
        private global::System.String _Modify;
        partial void OnModifyChanging(global::System.String value);
        partial void OnModifyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifyDate
        {
            get
            {
                return _ModifyDate;
            }
            set
            {
                OnModifyDateChanging(value);
                ReportPropertyChanging("ModifyDate");
                _ModifyDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifyDate");
                OnModifyDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifyDate;
        partial void OnModifyDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifyDateChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MvcDemoModel", "FK_Student_School", "STUDENT")]
        public EntityCollection<STUDENT> STUDENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<STUDENT>("MvcDemoModel.FK_Student_School", "STUDENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<STUDENT>("MvcDemoModel.FK_Student_School", "STUDENT", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MvcDemoModel", Name="STUDENT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class STUDENT : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 STUDENT 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        public static STUDENT CreateSTUDENT(global::System.String id)
        {
            STUDENT sTUDENT = new STUDENT();
            sTUDENT.Id = id;
            return sTUDENT;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SchoolId
        {
            get
            {
                return _SchoolId;
            }
            set
            {
                OnSchoolIdChanging(value);
                ReportPropertyChanging("SchoolId");
                _SchoolId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SchoolId");
                OnSchoolIdChanged();
            }
        }
        private global::System.String _SchoolId;
        partial void OnSchoolIdChanging(global::System.String value);
        partial void OnSchoolIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> JoinDate
        {
            get
            {
                return _JoinDate;
            }
            set
            {
                OnJoinDateChanging(value);
                ReportPropertyChanging("JoinDate");
                _JoinDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JoinDate");
                OnJoinDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _JoinDate;
        partial void OnJoinDateChanging(Nullable<global::System.DateTime> value);
        partial void OnJoinDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> GarduationDate
        {
            get
            {
                return _GarduationDate;
            }
            set
            {
                OnGarduationDateChanging(value);
                ReportPropertyChanging("GarduationDate");
                _GarduationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GarduationDate");
                OnGarduationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _GarduationDate;
        partial void OnGarduationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnGarduationDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private Nullable<global::System.Boolean> _Sex;
        partial void OnSexChanging(Nullable<global::System.Boolean> value);
        partial void OnSexChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                OnCreatorChanging(value);
                ReportPropertyChanging("Creator");
                _Creator = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Creator");
                OnCreatorChanged();
            }
        }
        private global::System.String _Creator;
        partial void OnCreatorChanging(global::System.String value);
        partial void OnCreatorChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Modify
        {
            get
            {
                return _Modify;
            }
            set
            {
                OnModifyChanging(value);
                ReportPropertyChanging("Modify");
                _Modify = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Modify");
                OnModifyChanged();
            }
        }
        private global::System.String _Modify;
        partial void OnModifyChanging(global::System.String value);
        partial void OnModifyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifyDate
        {
            get
            {
                return _ModifyDate;
            }
            set
            {
                OnModifyDateChanging(value);
                ReportPropertyChanging("ModifyDate");
                _ModifyDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifyDate");
                OnModifyDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifyDate;
        partial void OnModifyDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifyDateChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MvcDemoModel", "FK_Student_School", "School")]
        public School School
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<School>("MvcDemoModel.FK_Student_School", "School").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<School>("MvcDemoModel.FK_Student_School", "School").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<School> SchoolReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<School>("MvcDemoModel.FK_Student_School", "School");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<School>("MvcDemoModel.FK_Student_School", "School", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MvcDemoModel", "FK_STUDENT_SUBJECT_Student", "STUDENT_SUBJECT")]
        public EntityCollection<STUDENT_SUBJECT> STUDENT_SUBJECT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<STUDENT_SUBJECT>("MvcDemoModel.FK_STUDENT_SUBJECT_Student", "STUDENT_SUBJECT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<STUDENT_SUBJECT>("MvcDemoModel.FK_STUDENT_SUBJECT_Student", "STUDENT_SUBJECT", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MvcDemoModel", Name="STUDENT_SUBJECT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class STUDENT_SUBJECT : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 STUDENT_SUBJECT 对象。
        /// </summary>
        /// <param name="studentId">StudentId 属性的初始值。</param>
        /// <param name="subjectId">SubjectId 属性的初始值。</param>
        public static STUDENT_SUBJECT CreateSTUDENT_SUBJECT(global::System.String studentId, global::System.String subjectId)
        {
            STUDENT_SUBJECT sTUDENT_SUBJECT = new STUDENT_SUBJECT();
            sTUDENT_SUBJECT.StudentId = studentId;
            sTUDENT_SUBJECT.SubjectId = subjectId;
            return sTUDENT_SUBJECT;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StudentId
        {
            get
            {
                return _StudentId;
            }
            set
            {
                if (_StudentId != value)
                {
                    OnStudentIdChanging(value);
                    ReportPropertyChanging("StudentId");
                    _StudentId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("StudentId");
                    OnStudentIdChanged();
                }
            }
        }
        private global::System.String _StudentId;
        partial void OnStudentIdChanging(global::System.String value);
        partial void OnStudentIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SubjectId
        {
            get
            {
                return _SubjectId;
            }
            set
            {
                if (_SubjectId != value)
                {
                    OnSubjectIdChanging(value);
                    ReportPropertyChanging("SubjectId");
                    _SubjectId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SubjectId");
                    OnSubjectIdChanged();
                }
            }
        }
        private global::System.String _SubjectId;
        partial void OnSubjectIdChanging(global::System.String value);
        partial void OnSubjectIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private Nullable<global::System.Double> _Score;
        partial void OnScoreChanging(Nullable<global::System.Double> value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                OnCreatorChanging(value);
                ReportPropertyChanging("Creator");
                _Creator = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Creator");
                OnCreatorChanged();
            }
        }
        private global::System.String _Creator;
        partial void OnCreatorChanging(global::System.String value);
        partial void OnCreatorChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Modify
        {
            get
            {
                return _Modify;
            }
            set
            {
                OnModifyChanging(value);
                ReportPropertyChanging("Modify");
                _Modify = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Modify");
                OnModifyChanged();
            }
        }
        private global::System.String _Modify;
        partial void OnModifyChanging(global::System.String value);
        partial void OnModifyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifyDate
        {
            get
            {
                return _ModifyDate;
            }
            set
            {
                OnModifyDateChanging(value);
                ReportPropertyChanging("ModifyDate");
                _ModifyDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifyDate");
                OnModifyDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifyDate;
        partial void OnModifyDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifyDateChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MvcDemoModel", "FK_STUDENT_SUBJECT_Student", "STUDENT")]
        public STUDENT STUDENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STUDENT>("MvcDemoModel.FK_STUDENT_SUBJECT_Student", "STUDENT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STUDENT>("MvcDemoModel.FK_STUDENT_SUBJECT_Student", "STUDENT").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<STUDENT> STUDENTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STUDENT>("MvcDemoModel.FK_STUDENT_SUBJECT_Student", "STUDENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<STUDENT>("MvcDemoModel.FK_STUDENT_SUBJECT_Student", "STUDENT", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MvcDemoModel", "FK_STUDENT_SUBJECT_SUBJECT", "SUBJECT")]
        public SUBJECT SUBJECT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SUBJECT>("MvcDemoModel.FK_STUDENT_SUBJECT_SUBJECT", "SUBJECT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SUBJECT>("MvcDemoModel.FK_STUDENT_SUBJECT_SUBJECT", "SUBJECT").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SUBJECT> SUBJECTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SUBJECT>("MvcDemoModel.FK_STUDENT_SUBJECT_SUBJECT", "SUBJECT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SUBJECT>("MvcDemoModel.FK_STUDENT_SUBJECT_SUBJECT", "SUBJECT", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MvcDemoModel", Name="SUBJECT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SUBJECT : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 SUBJECT 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        public static SUBJECT CreateSUBJECT(global::System.String id)
        {
            SUBJECT sUBJECT = new SUBJECT();
            sUBJECT.Id = id;
            return sUBJECT;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private Nullable<global::System.Int32> _Score;
        partial void OnScoreChanging(Nullable<global::System.Int32> value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                OnCreatorChanging(value);
                ReportPropertyChanging("Creator");
                _Creator = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Creator");
                OnCreatorChanged();
            }
        }
        private global::System.String _Creator;
        partial void OnCreatorChanging(global::System.String value);
        partial void OnCreatorChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Modify
        {
            get
            {
                return _Modify;
            }
            set
            {
                OnModifyChanging(value);
                ReportPropertyChanging("Modify");
                _Modify = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Modify");
                OnModifyChanged();
            }
        }
        private global::System.String _Modify;
        partial void OnModifyChanging(global::System.String value);
        partial void OnModifyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifyDate
        {
            get
            {
                return _ModifyDate;
            }
            set
            {
                OnModifyDateChanging(value);
                ReportPropertyChanging("ModifyDate");
                _ModifyDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifyDate");
                OnModifyDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifyDate;
        partial void OnModifyDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifyDateChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MvcDemoModel", "FK_STUDENT_SUBJECT_SUBJECT", "STUDENT_SUBJECT")]
        public EntityCollection<STUDENT_SUBJECT> STUDENT_SUBJECT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<STUDENT_SUBJECT>("MvcDemoModel.FK_STUDENT_SUBJECT_SUBJECT", "STUDENT_SUBJECT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<STUDENT_SUBJECT>("MvcDemoModel.FK_STUDENT_SUBJECT_SUBJECT", "STUDENT_SUBJECT", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MvcDemoModel", Name="t_Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class t_Users : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 t_Users 对象。
        /// </summary>
        /// <param name="userID">UserID 属性的初始值。</param>
        /// <param name="account">Account 属性的初始值。</param>
        /// <param name="password">Password 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        /// <param name="sex">Sex 属性的初始值。</param>
        public static t_Users Createt_Users(global::System.Int32 userID, global::System.String account, global::System.String password, global::System.String name, global::System.Int32 sex)
        {
            t_Users t_Users = new t_Users();
            t_Users.UserID = userID;
            t_Users.Account = account;
            t_Users.Password = password;
            t_Users.Name = name;
            t_Users.Sex = sex;
            return t_Users;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private global::System.String _Account;
        partial void OnAccountChanging(global::System.String value);
        partial void OnAccountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private global::System.Int32 _Sex;
        partial void OnSexChanging(global::System.Int32 value);
        partial void OnSexChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Telephone
        {
            get
            {
                return _Telephone;
            }
            set
            {
                OnTelephoneChanging(value);
                ReportPropertyChanging("Telephone");
                _Telephone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Telephone");
                OnTelephoneChanged();
            }
        }
        private global::System.String _Telephone;
        partial void OnTelephoneChanging(global::System.String value);
        partial void OnTelephoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();

        #endregion

    
    }

    #endregion

    
}
